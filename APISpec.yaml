openapi: 3.1.0
info:
  title: PeaceLC Database API
  description: |-
    This is the API specification used for the database management web app designed for the Peace Lutheran Church.
  version: 1.0.11
servers:
  - url: https://localhost:3000/api
paths:
  /volunteers:
    get:
      summary: Get all volunteers
      operationId: getAllVol
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Queries'
    post:
      summary: Add a volunteer
      operationId: putVol
      parameters:
        - name: firstName
          in: query
          schema:
            type: string
            required: true
            examples: [John]
        - name: lastName
          in: query
          schema:
            type: string
            required: true
            examples: [Smith]
  /volunteers/firstName:
    get:
      summary: Get volunteers by first name
      operationId: getVolByFName
      parameters:
        - name: firstName
          in: query
          schema:
            type: string
            required: true
            examples: [John]
  /volunteers/lastName:
    get:
      summary: Get volunteers by last name
      operationId: getVolByLName
      parameters:
        - name: lastName
          in: query
          schema:
            type: string
            required: true
            examples: [Smith]
  /volunteers/email:
    get:
      summary: Get volunteers by email
      operationId: getVolByEmail
      parameters:
        - name: email
          in: query
          schema:
            type: string
            required: true
            examples: [john@smith.com]
    put:
      summary: Update volunteers by email
      operationId: putVolbyEmail
      parameters:
        - name: email
          in: query
          schema:
            type: string
            required: true
            examples: [john@smith.com]
        - name: firstName
          in: query
          schema:
            type: string
            required: false
        - name: lastName
          in: query
          schema:
            type: string
            required: false
        - name: newEmail
          in: query
          schema:
            type: string
            required: false
components:
  schemas:
    Query:
      type: array
      format: string
      description: A single row of a query, each entry of the array is one attribute of the row.
      examples:
        [[0, John, Smith, john@smith.com, 123-4567, 1999-09-09, married, Mrs. Smith, 2015-09-09, Member, NULL, NULL, John Smith Jr., [Pianist, Usher, Greeter], [Piano, Driving], [Music, Racing]]]
    Queries:
      type: object
      properties:
        result:
          type: array
          description: A list of queries, each entry of the array is a single row.
          items:
            $ref: '#/components/schemas/Query'